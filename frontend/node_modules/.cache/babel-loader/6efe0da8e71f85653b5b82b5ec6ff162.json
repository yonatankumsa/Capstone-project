{"ast":null,"code":"var _jsxFileName = \"/Users/yonatankumsa/Desktop/FullStack_Blog_App_with_React_Redux_and_Django/frontend/src/components/common/PrivateRoute.js\";\n// Manages --> Will Redirect the user back to login page if not already logged in.\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Applying Private Route check on our components\n// here component will manage our two components of App.js (Blogs and Forms) followed by auth\n// rest props (remaining properties)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!auth.isAuthenticated) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Redirect","Route","connect","PrivateRoute","component","Component","auth","rest","props","isAuthenticated","mapStateToProps","state"],"sources":["/Users/yonatankumsa/Desktop/FullStack_Blog_App_with_React_Redux_and_Django/frontend/src/components/common/PrivateRoute.js"],"sourcesContent":["// Manages --> Will Redirect the user back to login page if not already logged in.\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Applying Private Route check on our components\n// here component will manage our two components of App.js (Blogs and Forms) followed by auth\n// rest props (remaining properties)\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (!auth.isAuthenticated) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAG;EAAA,IAAC;IAAEC,SAAS,EAAEC,SAAb;IAAwBC,IAAxB;IAA8B,GAAGC;EAAjC,CAAD;EAAA,oBACnB,QAAC,KAAD,OACMA,IADN;IAEE,MAAM,EAAGC,KAAD,IAAW;MACjB,IAAI,CAACF,IAAI,CAACG,eAAV,EAA2B;QACzB,oBAAO,QAAC,QAAD;UAAU,EAAE,EAAC;QAAb;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD,MAEO;QACL,oBAAO,QAAC,SAAD,OAAeD;QAAf;UAAA;UAAA;UAAA;QAAA,QAAP;MACD;IACF;EARH;IAAA;IAAA;IAAA;EAAA,QADmB;AAAA,CAArB;;KAAML,Y;;AAaN,MAAMO,eAAe,GAAIC,KAAD,KAAY;EAClCL,IAAI,EAAEK,KAAK,CAACL;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACQ,eAAD,CAAP,CAAyBP,YAAzB,CAAf"},"metadata":{},"sourceType":"module"}