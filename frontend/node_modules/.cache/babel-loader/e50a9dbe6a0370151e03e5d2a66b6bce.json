{"ast":null,"code":"// function MyComponent() {\n//     const [error, setError] = useState(null);\n//     const [isLoaded, setIsLoaded] = useState(false);\n//     const [items, setItems] = useState([]);\n//     // Note: the empty deps array [] means\n//     // this useEffect will run once\n//     // similar to componentDidMount()\n//     useEffect(() => {\n//       fetch(\"https://api.example.com/items\")\n//         .then(res => res.json())\n//         .then(\n//           (result) => {\n//             console.log(result)\n//             setIsLoaded(true);\n//             setItems(result);\n//           },\n//           // Note: it's important to handle errors here\n//           // instead of a catch() block so that we don't swallow\n//           // exceptions from actual bugs in components.\n//           (error) => {\n//             setIsLoaded(true);\n//             setError(error);\n//           }\n//         )\n//     }, [])\n//     if (error) {\n//       return <div>Error: {error.message}</div>;\n//     } else if (!isLoaded) {\n//       return <div>Loading...</div>;\n//     } else {\n//       return (\n//         <ul>\n//           {items.map(item => (\n//             <li key={item.id}>\n//               {item.name} {item.price}\n//             </li>\n//           ))}\n//         </ul>\n//       );\n//     }\n//   }\n//  export default MyComponent;","map":{"version":3,"names":[],"sources":["/Users/yonatankumsa/Desktop/GA-SEI/Capstone-project/frontend/src/pages/newsapi.jsx"],"sourcesContent":["// function MyComponent() {\n//     const [error, setError] = useState(null);\n//     const [isLoaded, setIsLoaded] = useState(false);\n//     const [items, setItems] = useState([]);\n  \n//     // Note: the empty deps array [] means\n//     // this useEffect will run once\n//     // similar to componentDidMount()\n//     useEffect(() => {\n//       fetch(\"https://api.example.com/items\")\n//         .then(res => res.json())\n//         .then(\n//           (result) => {\n//             console.log(result)\n//             setIsLoaded(true);\n//             setItems(result);\n//           },\n//           // Note: it's important to handle errors here\n//           // instead of a catch() block so that we don't swallow\n//           // exceptions from actual bugs in components.\n//           (error) => {\n//             setIsLoaded(true);\n//             setError(error);\n//           }\n//         )\n//     }, [])\n  \n//     if (error) {\n//       return <div>Error: {error.message}</div>;\n//     } else if (!isLoaded) {\n//       return <div>Loading...</div>;\n//     } else {\n//       return (\n//         <ul>\n//           {items.map(item => (\n//             <li key={item.id}>\n//               {item.name} {item.price}\n//             </li>\n//           ))}\n//         </ul>\n//       );\n//     }\n//   }\n//  export default MyComponent;"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}