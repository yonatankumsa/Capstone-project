{"ast":null,"code":"import { DELETE_BLOGS, GET_BLOGS, ADD_BLOGS, UPDATE_BLOGS } from \"../actions/types\"; // Redux State\n\nconst initialState = {\n  blogs: []\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_BLOGS:\n      return { ...state,\n        blogs: action.payload // filling up state with api data\n\n      };\n\n    case DELETE_BLOGS:\n      return { ...state,\n        blogs: state.blogs.filter(blog => blog.id !== action.payload) // only those id's will be displayed on webpage which is not equal to the id\n        // present in the payload.\n\n      };\n\n    case ADD_BLOGS:\n      return { ...state,\n        blogs: [...state.blogs, action.payload]\n      };\n\n    case UPDATE_BLOGS:\n      const updates = state.blogs.map(blog => {\n        if (blog.id === action.payload.id) {\n          return { ...blog,\n            ...action.payload\n          };\n        }\n\n        return blog;\n      });\n      return { ...state,\n        blogs: updates\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["DELETE_BLOGS","GET_BLOGS","ADD_BLOGS","UPDATE_BLOGS","initialState","blogs","state","action","type","payload","filter","blog","id","updates","map"],"sources":["/Users/yonatankumsa/Desktop/FullStack_Blog_App_with_React_Redux_and_Django/frontend/src/reducers/blogs.js"],"sourcesContent":["import {\n  DELETE_BLOGS,\n  GET_BLOGS,\n  ADD_BLOGS,\n  UPDATE_BLOGS,\n} from \"../actions/types\";\n\n// Redux State\nconst initialState = {\n  blogs: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BLOGS:\n      return {\n        ...state,\n        blogs: action.payload, // filling up state with api data\n      };\n    case DELETE_BLOGS:\n      return {\n        ...state,\n        blogs: state.blogs.filter((blog) => blog.id !== action.payload),\n        // only those id's will be displayed on webpage which is not equal to the id\n        // present in the payload.\n      };\n    case ADD_BLOGS:\n      return {\n        ...state,\n        blogs: [...state.blogs, action.payload],\n      };\n    case UPDATE_BLOGS:\n      const updates = state.blogs.map((blog) => {\n        if (blog.id === action.payload.id) {\n          return { ...blog, ...action.payload };\n        }\n        return blog;\n      });\n      return {\n        ...state,\n        blogs: updates,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SACEA,YADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,YAJF,QAKO,kBALP,C,CAOA;;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;AAIA,eAAe,YAAwC;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,SAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELD,KAAK,EAAEE,MAAM,CAACE,OAFT,CAEkB;;MAFlB,CAAP;;IAIF,KAAKT,YAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELD,KAAK,EAAEC,KAAK,CAACD,KAAN,CAAYK,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAhD,CAFF,CAGL;QACA;;MAJK,CAAP;;IAMF,KAAKP,SAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELD,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACD,KAAV,EAAiBE,MAAM,CAACE,OAAxB;MAFF,CAAP;;IAIF,KAAKN,YAAL;MACE,MAAMU,OAAO,GAAGP,KAAK,CAACD,KAAN,CAAYS,GAAZ,CAAiBH,IAAD,IAAU;QACxC,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAA/B,EAAmC;UACjC,OAAO,EAAE,GAAGD,IAAL;YAAW,GAAGJ,MAAM,CAACE;UAArB,CAAP;QACD;;QACD,OAAOE,IAAP;MACD,CALe,CAAhB;MAMA,OAAO,EACL,GAAGL,KADE;QAELD,KAAK,EAAEQ;MAFF,CAAP;;IAIF;MACE,OAAOP,KAAP;EA9BJ;AAgCD"},"metadata":{},"sourceType":"module"}