{"ast":null,"code":"var _jsxFileName = \"/Users/yonatankumsa/Desktop/GA-SEI/Capstone-project/frontend/src/pages/newsapi.jsx\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyComponent() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      console.log(result);\n      setIsLoaded(true);\n      const list = result.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: product\n      }, result, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 44\n      }, this));\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(MyComponent, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["MyComponent","error","setError","useState","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","console","log","list","map","product","message","item","name","price","id"],"sources":["/Users/yonatankumsa/Desktop/GA-SEI/Capstone-project/frontend/src/pages/newsapi.jsx"],"sourcesContent":["function MyComponent() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n  \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"https://api.example.com/items\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            console.log(result)\n            setIsLoaded(true);\n           const list = result.map(result=><li key={result}>{product}</li>)\n            setItems(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.id}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n export default MyComponent;"],"mappings":";;;;;AAAA,SAASA,WAAT,GAAuB;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CAHmB,CAKnB;EACA;EACA;;EACAK,SAAS,CAAC,MAAM;IACdC,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;MACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAR,WAAW,CAAC,IAAD,CAAX;MACD,MAAMW,IAAI,GAAGH,MAAM,CAACI,GAAP,CAAWJ,MAAM,iBAAE;QAAA,UAAkBK;MAAlB,GAASL,MAAT;QAAA;QAAA;QAAA;MAAA,QAAnB,CAAb;MACCN,QAAQ,CAACM,MAAD,CAAR;IACD,CARL,EASI;IACA;IACA;IACCZ,KAAD,IAAW;MACTI,WAAW,CAAC,IAAD,CAAX;MACAH,QAAQ,CAACD,KAAD,CAAR;IACD,CAfL;EAiBD,CAlBQ,EAkBN,EAlBM,CAAT;;EAoBA,IAAIA,KAAJ,EAAW;IACT,oBAAO;MAAA,sBAAaA,KAAK,CAACkB,OAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFD,MAEO,IAAI,CAACf,QAAL,EAAe;IACpB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFM,MAEA;IACL,oBACE;MAAA,UACGE,KAAK,CAACW,GAAN,CAAUG,IAAI,iBACb;QAAA,WACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;MAAA,GAASF,IAAI,CAACG,EAAd;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF;EASD;AACF;;GA3CMvB,W;;KAAAA,W;AA4CR,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}